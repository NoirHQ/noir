[package]
name = "frame-babel"
description = "FRAME babel for cross-protocol compatibility"
license = "GPL-3.0-or-later"
authors = { workspace = true }
version = { workspace = true }
edition = { workspace = true }
repository = { workspace = true }
publish = false

[lints]
workspace = true

[dependencies]
bech32 = { workspace = true, optional = true }
bincode = { workspace = true }
cosmos-sdk-proto = { workspace = true, optional = true }
cosmwasm-std = { workspace = true, default-features = false, optional = true }
cosmwasm-vm = { workspace = true, default-features = false, optional = true }
cosmwasm-vm-wasmi = { workspace = true, default-features = false, optional = true }
ethereum = { workspace = true, optional = true }
fp-evm = { workspace = true, optional = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
hex-literal = { workspace = true }
np-babel = { workspace = true, default-features = false }
np-multimap = { workspace = true, default-features = false }
num_enum = { workspace = true, optional = true }
pallet-assets = { workspace = true, optional = true }
pallet-balances = { workspace = true }
pallet-cosmos = { workspace = true, default-features = false, optional = true }
pallet-cosmos-types = { workspace = true, default-features = false, optional = true }
pallet-cosmos-x-auth-signing = { workspace = true, default-features = false, optional = true }
pallet-cosmos-x-bank = { workspace = true, default-features = false, optional = true }
pallet-cosmos-x-wasm = { workspace = true, default-features = false, optional = true }
pallet-cosmwasm = { workspace = true, default-features = false, optional = true }
pallet-ethereum = { workspace = true, optional = true }
pallet-evm = { workspace = true, optional = true }
pallet-evm-precompileset-assets-erc20 = { workspace = true, optional = true }
pallet-evm-precompile-balances-erc20 = { workspace = true, optional = true }
pallet-evm-precompile-blake2 = { workspace = true, optional = true }
pallet-evm-precompile-bn128 = { workspace = true, optional = true }
pallet-evm-precompile-modexp = { workspace = true, optional = true }
pallet-evm-precompile-simple = { workspace = true, optional = true }
pallet-solana = { workspace = true }
parity-scale-codec = { workspace = true }
precompile-utils = { workspace = true, optional = true }
scale-info = { workspace = true }
serde = { workspace = true, optional = true }
serde-json-wasm = { workspace = true, optional = true }
solana-sdk = { workspace = true, optional = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }

[dev-dependencies]
const-hex = { workspace = true, default-features = true }
# substrate
pallet-assets = { workspace = true, default-features = true }
pallet-balances = { workspace = true, default-features = true }
pallet-sudo = { workspace = true, default-features = true }
pallet-timestamp = { workspace = true, default-features = true }
sp-keyring = { workspace = true, default-features = true }
# frontier
pallet-ethereum = { workspace = true, default-features = true }
pallet-evm = { workspace = true, default-features = true }
# noir
np-runtime = { workspace = true, default-features = true }
pallet-cosmos = { workspace = true, default-features = true }
pallet-cosmos-x-auth = { workspace = true, default-features = false }
pallet-cosmwasm = { workspace = true, default-features = true }
pallet-multimap = { workspace = true, default-features = true }

[features]
default = ["std", "pallet"]
std = [
	"bech32?/std",
	"cosmos-sdk-proto?/std",
	"cosmwasm-std?/std",
	"cosmwasm-vm?/std",
	"cosmwasm-vm-wasmi?/std",
	"ethereum?/std",
	"fp-evm?/std",
	"frame-support/std",
	"frame-system/std",
	"np-babel/std",
	"np-multimap/std",
	"num_enum?/std",
	"pallet-assets?/std",
	"pallet-balances/std",
	"pallet-cosmos?/std",
	"pallet-cosmos-types?/std",
	"pallet-cosmos-x-auth-signing?/std",
	"pallet-cosmos-x-bank?/std",
	"pallet-cosmos-x-wasm?/std",
	"pallet-cosmwasm?/std",
	"pallet-ethereum?/std",
	"pallet-evm?/std",
	"pallet-evm-precompileset-assets-erc20?/std",
	"pallet-evm-precompile-balances-erc20?/std",
	"pallet-evm-precompile-blake2?/std",
	"pallet-evm-precompile-bn128?/std",
	"pallet-evm-precompile-modexp?/std",
	"pallet-evm-precompile-simple?/std",
	"pallet-solana/std",
	"parity-scale-codec/std",
	"precompile-utils?/std",
	"scale-info/std",
	"serde?/std",
	"serde-json-wasm?/std",
	"solana-sdk?/std",
	"sp-core/std",
	"sp-runtime/std",
]
cosmos = [
	"bech32",
	"cosmos-sdk-proto",
	"cosmwasm-std",
	"cosmwasm-vm",
	"cosmwasm-vm-wasmi",
	"np-babel/cosmos",
	"pallet-assets",
	"pallet-cosmos",
	"pallet-cosmos-types",
	"pallet-cosmos-x-auth-signing",
	"pallet-cosmos-x-bank",
	"pallet-cosmos-x-wasm",
	"pallet-cosmwasm",
	"serde",
	"serde-json-wasm",
]
ethereum = [
	"dep:ethereum",
	"fp-evm",
	"np-babel/ethereum",
	"num_enum",
	"pallet-ethereum",
	"pallet-evm",
	"pallet-evm-precompileset-assets-erc20",
	"pallet-evm-precompile-balances-erc20",
	"pallet-evm-precompile-blake2",
	"pallet-evm-precompile-bn128",
	"pallet-evm-precompile-modexp",
	"pallet-evm-precompile-simple",
	"precompile-utils",
]
nostr = ["np-babel/nostr"]
solana = [
	"np-babel/solana", 
	"solana-sdk"
]
pallet = [
	"cosmos",
	"ethereum",
	"np-babel/serde",
	"solana",
]
runtime-benchmarks = [
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-ethereum?/runtime-benchmarks",
	"pallet-evm?/runtime-benchmarks",
	"pallet-multimap/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-ethereum?/try-runtime",
	"pallet-evm?/try-runtime",
	"pallet-multimap/try-runtime",
	"sp-runtime/try-runtime",
]
